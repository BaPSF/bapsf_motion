[metadata]
name = bapsf_motion
provides = bapsf_motion
author = Basic Plasma Science Facility
description = Package for controlling motion devices in a BaPSF DAQ system
long_description = file: README.md
long_description_content_type = text/markdown
;license = BSD+Patent
;license_file = LICENSE.md
;url = https://www.plasmapy.org
;project_urls =
;    Documentation=https://docs.plasmapy.org/
;    Changelog=https://docs.plasmapy.org/en/stable/whatsnew/index.html
;    Source=https://github.com/plasmapy/plasmapy
;    Issues=https://github.com/plasmapy/plasmapy/issues/
;    Twitter=https://twitter.com/PlasmaPy
;    Chat=https://plasmapy.org/chat
edit_on_github = True
github_project = BaPSF/daq-mod-probedrives
keywords = plasma physics, plasma, science, bapsf, motion
classifiers=
  Development Status :: 1 - Planning
  Intended Audience :: Science/Research
;  License :: OSI Approved :: BSD License
  Operating System :: OS Independent
  Programming Language :: Python :: 3
  Programming Language :: Python :: 3.7
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.8
  Programming Language :: Python :: 3.9
  Programming Language :: Python :: 3.10
  Topic :: Scientific/Engineering :: Physics
  Topic :: Scientific/Engineering :: Astronomy

[options]
python_requires = >=3.7
packages = find:
package_dir =
  = src
include_package_data = True
setup_requires =
  # PEP-518 encourages the use of pyproject.toml for defining
  # build dependencies...they should be defined under build-system.requires
install_requires =
  # ought to mirror requirements/install.txt
  matplotlib >= 3.3.0
  numpy >= 1.18.1
  PyQt5
  PySide6
  qtwidgets
  scipy
  tomli
  tomli_w

[options.extras_require]
# a weird "bug" since python 2 allows extras to depend on extras
# for backwards compatibility, setuptools will keep this active
# see https://github.com/pypa/setuptools/issues/1260#issuecomment-438187625
tests =
  # ought to mirror requirements/tests.txt
  pytest >= 5.1
docs =
  # ought to mirror requirements/docs.txt
  docutils
  numpydoc
  pygments >= 2.11.0
  sphinx >= 3.2.0
  sphinx-changelog
  sphinx-copybutton
  sphinx-gallery
  sphinx-hoverxref >= 1.0.0
  sphinxcontrib-bibtex
  sphinx_rtd_theme >= 1.0.0
  towncrier >= 19.2.0
extras =
  # ought to mirror requirements/extras.txt
  # for developers
  black
  isort
developer =
  # install everything for developers
  # ought to functionally mirror requirements.txt
  %(docs)s
  %(tests)s
  %(extras)s

[options.packages.find]
where = src
exclude = labview

[build_docs]
source-dir = docs
build-dir = docs/_build
all_files = 1

[tool:pytest]
minversion = 5.1
testpaths = "src/bapsf_motion"
norecursedirs = "build" "docs/"
doctest_optionflags =
    NORMALIZE_WHITESPACE
    ELLIPSIS
    NUMBER
addopts = --doctest-modules --doctest-continue-on-failure
filterwarnings =
    ignore:.*Creating a LegacyVersion.*:DeprecationWarning

[flake8]
convention = numpy
# Checks marked as TODO should be eventually enabled,
# but are failing right now. These are *great*
# first contributions. ;)
# Checks not marked by TODO *maybe* should be
# eventually enabled â€• ask!
extend-ignore =
    D105,
    D107,
    # Ignoring D202 allows blank lines to be put on either side of code "paragraphs" at the beginning of a function.
    D202,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D205,
    # D302 is unnecessary as we are using Python 3.6+.
    D302,
    # D205 and D400 are ignored to allow the "one-liner" to exceed one
    # line, which is sometimes necessary for even concise descriptions of plasma
    # physics functions and classes.
    D400,
    # D403: First word of the first line should be properly capitalized ('Latex', not 'LaTeX') # Dominik: good job, pydocstyle /s
    D403,
    # E203 something something whitespace? TODO check again
    E203,
    E501,
    # E731 do not assign a lambda, use a def - Dominik: disagreed, lambdas have uses
    E731,
    F401,
    F405,
    # W605 invalid escape sequence,
    W605,
    RST210,
    RST213,
    # RST305 so that ReST substitutions in a different file can be used
    RST305,
    RST306
exclude =
    extern,
    sphinx,
    *test*,
    *parsetab.py,
    conftest.py,
    docs/conf.py,
    setup.py,
    .jupyter
# Use rst-roles and rst-directives to list roles and directives from
# Sphinx extensions so that they don't get flagged when using
# flake8-rst-docstrings.
rst-roles =
    attr
    cite
    cite:ct
    cite:cts
    cite:p
    cite:ps
    cite:t
    cite:ts
    class
    confval
    data
    event
    exc
    file
    func
    meth
    mod
    ref
    rst:dir
    term
rst-directives =
    confval
    deprecated
    event
    nbgallery
    rst:directive
    todo
enable-extensions =
    # Look for strings that have {} in them but aren't f-strings.
    # If there is a false positive from this in a file, put that in
    # per-file-ignores.
    FS003
per-file-ignores =
;    plasmapy/formulary/__init__.py:F403
    src/bapsf_motion/__init__.py:FS003

[coverage:run]
omit =
    */tests/*

[coverage:report]
exclude_lines =
    coverage: ignore
    ImportError
    ModuleNotFoundError
